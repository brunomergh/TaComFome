{"name":"Tacomfome","tagline":"","body":"Exercício para implementar os padrões estruturais.\r\nForam aplicados o padrao Flyweight, Decorator, Facade, Adapter, Bridge, Composite\r\n\r\nAdapter - Adaptador (Classe) Converte a interface de uma\r\nclasse em outra interface que clientes possam utilizar.\r\nCompatibiliza classes, permitindo que trabalhem em conjunto.\r\n\r\nBridge - Ponte (Objeto) Desacopla uma abstração de sua\r\nimplementação, de modo que as duas possam variar\r\nindependentemente.\r\n\u0001\r\nComposite - Composição (Objeto) Compor objetos em\r\nestruturas de árvores para representar hierarquias parte-todo.\r\nPermitir que clientes tratem de modo uniforme objetos individuais e\r\nsuas composições.\r\n\r\nDecorator - Decorador (Objeto) Anexa dinamicamente\r\nresponsabilidades adicionais a um objeto. Provê uma alternativa\r\nflexível ao uso de herança como modo de estender funcionalidade.\r\n\r\nFacade - Fachada (Objeto) Provê uma interface unificada para\r\no conjunto de interfaces de um subsistema. Define uma interface\r\nde alto nível que faz um subsistema mais fácil de usar.\r\n\u0001\r\nFlyweight - Peso-mosca (Objeto) Usa compartilhamento\r\npara suportar um grande número de pequenos objetos de forma\r\neficiente.\r\n\r\nSegue o modelo:\r\n![](https://github.com/brunomergh/TaComFome/blob/master/Modelo/TaComFomeDiagram.png?raw=true)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}